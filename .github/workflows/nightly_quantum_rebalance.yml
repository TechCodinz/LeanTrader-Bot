name: Nightly Quantum Rebalance
on:
  schedule:
    - cron: "5 0 * * *"
  workflow_dispatch: {}

jobs:
  rebalance:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run CLI (local or runtime)
        env:
          Q_ENABLE_QUANTUM: "true"
          Q_USE_RUNTIME: "${{ secrets.Q_USE_RUNTIME }}"
          IBM_QUANTUM_API_KEY: "${{ secrets.IBM_QUANTUM_API_KEY }}"
        run: |
          set -e
          if [ "${{ secrets.Q_USE_RUNTIME }}" = "true" ]; then
            python -m cli.serverless_rebalance --budget 10 --regime calm --use-runtime | tee summary.json
          else
            python -m cli.serverless_rebalance --budget 10 --regime calm --no-runtime | tee summary.json
          fi

      - name: Build Daily Report (HTML+PDF)
        run: |
          python -m cli.daily_report --date $(date -u +%F) --out out/report --json summary.json

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nightly-report
          path: out/*.pdf

      - name: Post report to Slack
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          MSG='{"text":"Nightly report generated. Download from GitHub Artifacts: '${{ github.server_url }}'/'${{ github.repository }}'/actions/runs/'${{ github.run_id }}'"}'
          curl -sS -X POST -H 'Content-type: application/json' --data "$MSG" "$SLACK_WEBHOOK_URL"
      - name: Notify Slack
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GRAFANA_URL: ${{ secrets.GRAFANA_URL }}
          RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          set -e
          if [ "${{ secrets.Q_USE_RUNTIME }}" = "true" ]; then
            SUMMARY_JSON=$(python -m cli.serverless_rebalance --budget 10 --regime calm --use-runtime | tail -n 1)
          else
            SUMMARY_JSON=$(python -m cli.serverless_rebalance --budget 10 --regime calm --no-runtime | tail -n 1)
          fi

          STATUS="${{ job.status }}"
          COLOR="#36a64f"
          if [ "$STATUS" != "success" ]; then COLOR="#e01e5a"; fi

          read -r -d '' MESSAGE <<'EOF'
{
  "blocks": [
    {
      "type": "header",
      "text": { "type": "plain_text", "text": "Nightly Quantum Rebalance â€” ${STATUS^^}" }
    },
    {
      "type": "section",
      "fields": [
        { "type": "mrkdwn", "text": "*Repo:*\n${{ github.repository }}" },
        { "type": "mrkdwn", "text": "*Run #:*\n${{ github.run_number }}" },
        { "type": "mrkdwn", "text": "*Branch:*\n${{ github.ref_name }}" },
        { "type": "mrkdwn", "text": "*Commit:*\n${{ github.sha }}" }
      ]
    },
    {
      "type": "section",
      "text": { "type": "mrkdwn", "text": "*Summary JSON:*\n```'"$SUMMARY_JSON"'```" }
    },
    {
      "type": "actions",
      "elements": [
        { "type": "button", "text": { "type": "plain_text", "text": "View GitHub Run" }, "url": "'"$RUN_URL"'", "style": "primary" },
        { "type": "button", "text": { "type": "plain_text", "text": "Open Grafana" }, "url": "'"$GRAFANA_URL"'" },
        { "type": "button", "text": { "type": "plain_text", "text": "Solve Latency Panel" }, "url": "'"$GRAFANA_URL"'/d/QUANTUM/quantum_observability?viewPanel=3&orgId=1" }
      ]
    }
  ]
}
EOF

          curl -sS -X POST -H 'Content-type: application/json' --data "$MESSAGE" "$SLACK_WEBHOOK_URL"
